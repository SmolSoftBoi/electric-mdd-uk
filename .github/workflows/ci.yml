name: CI

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'yarn'
          cache-dependency-path: '**/yarn.lock'

      - name: Restore Nx cache
        id: nx-cache
        uses: actions/cache@v3
        with:
          path: .nx/cache
          key: ${{ runner.os }}-nx-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-nx-
      # Restore Playwright browsers from the default cache directory
      - name: Restore Playwright cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-playwright-
      - name: Enable corepack
        run: corepack enable

      - name: Install dependencies
        run: yarn install --immutable

      - name: Install Playwright browsers
        run: yarn playwright install --with-deps

      - name: Lint
        run: yarn lint --fix

      - name: Format
        run: yarn format

      - name: Type check
        run: yarn ts:check

      - name: Unit tests
        run: yarn nx run-many --target=test

      - name: Test script
        run: yarn test

      - name: E2E tests
        run: yarn e2e

      # Save browsers cache even if tests fail
      - name: Save Playwright cache
        if: always()
        uses: actions/cache/save@v3
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/yarn.lock') }}

      # Persist Nx build artifacts on every run
      - name: Save Nx cache
        if: always() && steps.nx-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: .nx/cache
          key: ${{ steps.nx-cache.outputs.cache-primary-key }}
